"use strict";(self.webpackChunkslashzone_wiki=self.webpackChunkslashzone_wiki||[]).push([[449],{6951:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Modding/extending/entity_data","title":"Entity Data","description":"To synchronize network data of your custom entity you first need to define data set (\\"header\\").","source":"@site/docs/Modding/2-extending/entity_data.md","sourceDirName":"Modding/2-extending","slug":"/Modding/extending/entity_data","permalink":"/slashzone-wiki/docs/Modding/extending/entity_data","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Modding/2-extending/entity_data.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"wikiSidebar","previous":{"title":"Creating an Entity","permalink":"/slashzone-wiki/docs/category/creating-an-entity"}}');var a=t(4848),i=t(8453);const d={sidebar_position:2},s="Entity Data",o={},l=[{value:"Defining Data",id:"defining-data",level:2},{value:"Data Serialization",id:"data-serialization",level:2},{value:"Data Deserialization",id:"data-deserialization",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"entity-data",children:"Entity Data"})}),"\n",(0,a.jsx)(n.p,{children:'To synchronize network data of your custom entity you first need to define data set ("header").'}),"\n",(0,a.jsx)(n.p,{children:"Then for each of the header you define method that can write this data. Then a method that writes all the data."}),"\n",(0,a.jsx)(n.p,{children:"The reason behind being able to write individually, is to be able to change and sync data individually, instead of sending all the data every time."}),"\n",(0,a.jsx)(n.p,{children:"WriteAllHeaders is used when a new player joins and needs the full state of the server"}),"\n",(0,a.jsx)(n.h2,{id:"defining-data",children:"Defining Data"}),"\n",(0,a.jsx)(n.p,{children:"To extend entity data you first have to define Enum with your data types."}),"\n",(0,a.jsx)(n.p,{children:"It's important to specify enum type to byte"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",metastring:'title="Example entity header"',children:"public enum ExampleEntityHeader : byte\r\n{\r\n    IsReady,\r\n    CurrentStage\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"data-serialization",children:"Data Serialization"}),"\n",(0,a.jsx)(n.p,{children:"First define methods to serialize specific header"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"BinaryWriter Writer property is available"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",metastring:'title="Example Write methods"',children:"private void WriteIsReady()\r\n{\r\n    _insertHeader(ExampleEntityHeader.IsReady);\r\n    Writer.Write(IsReady);\r\n}\r\n\r\nprivate void WriteCurrentStage()\r\n{\r\n    _insertHeader(ExampleEntityHeader.CurrentStage);\r\n    Writer.Write(CurrentStage);\r\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:"Then override WriteAllHeaders to serialize all headers"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Make sure to define all headers that are in the enum or else the serialization will throw error"}),"\n",(0,a.jsx)(n.p,{children:"And leave the base overload so the inherited data is also serialized"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",metastring:'title="Example Write methods"',children:"public override void WriteAllHeaders()\r\n{\r\n    base.WriteAllHeaders(); // Make sure to leave base overload\r\n        \r\n    _InsertHeaderCount(typeof(ExampleEntityHeader));\r\n    WriteIsReady();\r\n    WriteCurrentStage();\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"data-deserialization",children:"Data Deserialization"}),"\n",(0,a.jsx)(n.p,{children:"To deserialize override ReadHeaders method and follow the structure of the example"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Feel free to define each header (switch case) as own method, but this is not required"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",metastring:'title="Example Read Headers"',children:'protected override void ReadHeaders()\r\n{\r\n    base.ReadHeaders();\r\n\r\n    var headerCount = _GetHeaderCount();\r\n\r\n\r\n    for (int i = 0; i < headerCount; i++)\r\n    {\r\n\r\n        var header = _GetHeader<ExampleEntityHeader>();\r\n\r\n        switch (header)\r\n        {\r\n            case ExampleEntityHeader.IsReady:\r\n\r\n                IsReady = Reader.ReadBoolean();\r\n                continue;\r\n            \r\n            case ExampleEntityHeader.CurrentStage:\r\n\r\n                CurrentStage = Reader.ReadByte();\r\n                continue;\r\n            \r\n            default:\r\n                Logs.Error("Unknown header type!");\r\n                continue;\r\n        }\r\n        \r\n    }\r\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var r=t(6540);const a={},i=r.createContext(a);function d(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);